// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.loopiadns.pkg;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class DnsRecordArgs extends com.pulumi.resources.ResourceArgs {

    public static final DnsRecordArgs Empty = new DnsRecordArgs();

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="ttl", required=true)
    private Output<Integer> ttl;

    public Output<Integer> ttl() {
        return this.ttl;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="value", required=true)
    private Output<String> value;

    public Output<String> value() {
        return this.value;
    }

    @Import(name="zone", required=true)
    private Output<String> zone;

    public Output<String> zone() {
        return this.zone;
    }

    private DnsRecordArgs() {}

    private DnsRecordArgs(DnsRecordArgs $) {
        this.name = $.name;
        this.ttl = $.ttl;
        this.type = $.type;
        this.value = $.value;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsRecordArgs $;

        public Builder() {
            $ = new DnsRecordArgs();
        }

        public Builder(DnsRecordArgs defaults) {
            $ = new DnsRecordArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder ttl(Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        public Builder value(String value) {
            return value(Output.of(value));
        }

        public Builder zone(Output<String> zone) {
            $.zone = zone;
            return this;
        }

        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public DnsRecordArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("DnsRecordArgs", "name");
            }
            if ($.ttl == null) {
                throw new MissingRequiredPropertyException("DnsRecordArgs", "ttl");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("DnsRecordArgs", "type");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("DnsRecordArgs", "value");
            }
            if ($.zone == null) {
                throw new MissingRequiredPropertyException("DnsRecordArgs", "zone");
            }
            return $;
        }
    }

}
